prompt,answer
"Normalize the 'home_team_name' column in the 'dataduo.baseball_schedules_polluted' table and output the results to a new table named 'baseball_schedules_polluted_view' with the clean column named 'homeTeamName'.
",Verify the transformation on column 'home_team_name' in table 'baseball_schedules_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Create a view named `baseball_schedules_polluted_view` from the table `dataduo.baseball_schedules_polluted`. Select all columns and rename the `created_time` column to `created`.
",Verify the transformation on column 'created_time' in table 'baseball_schedules_polluted' as per type 'merge' and transformation 'None'. Check the results in the new table or view.
"Convert the 'basic_amount_usd' column in table dataduo.finance_table14_polluted from USD to EUR using a unit conversion. Write the results, including the converted values in a new column called 'basic_amount_eur', to a new table named finance_table14_polluted_result.
",Verify the transformation on column 'basic_amount_usd' in table 'finance_table14_polluted' as per type 'transformation' and transformation 'unit_conversions'. Check the results in the new table or view.
"Replace all blank values in the 'min_shares' column of the 'dataduo.finance_table14_polluted' table with NULL. Write the results to a new table named 'finance_table14_polluted_result'.
",Verify the transformation on column 'min_shares' in table 'finance_table14_polluted' as per type 'transformation' and transformation 'blanks'. Check the results in the new table or view.
"Remove extra characters from the 'symbol' column in the 'dataduo.finance_table2_polluted' table. Write the results to a new view named 'finance_table2_polluted_view'.
",Verify the transformation on column 'symbol' in table 'finance_table2_polluted' as per type 'transformation' and transformation 'extra_characters'. Check the results in the new table or view.
"Standardize the column marketcap on table dataduo.finance_table2_polluted to resolve data type anomalies. Write the results in a new table named finance_table2_polluted_result.
",Verify the transformation on column 'marketcap' in table 'finance_table2_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Rename the column 'recall_reason' to 'reason_for_recall' in the table dataduo.food_enforcement_polluted. Write the results to a new table named food_enforcement_polluted_result.
",Verify the transformation on column 'recall_reason' in table 'food_enforcement_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Based on the table dataduo.food_enforcement_polluted, copy the column 'distribution_area' to a new column named 'distribution_pattern' in a new table named food_enforcement_polluted_view. No transformation is required.
",Verify the transformation on column 'distribution_area' in table 'food_enforcement_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Based on the polluted table 'dataduo.government_table10_polluted', copy the column 'last_price' as is, without any transformation, and write the results to a new table named 'government_table10_polluted_result'.
",Verify the transformation on column 'last_price' in table 'government_table10_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Based on the data in table dataduo.government_table10_polluted, create a new table named government_table10_polluted_result. No transformations are needed for the column 'change', simply copy the 'change' column as is to the new table.
",Verify the transformation on column 'change' in table 'government_table10_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Normalize the 'district' column in the 'dataduo.government_table11_polluted' table. Write the results to a new table named 'government_table11_polluted_result'.
",Verify the transformation on column 'district' in table 'government_table11_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Normalize the 'course_type' column in table dataduo.government_table11_polluted. Write the results to a new table named government_table11_polluted_result.
",Verify the transformation on column 'course_type' in table 'government_table11_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Clean the 'company_name' column in the 'dataduo.government_table12_polluted' table by removing garbage data. Write the results to a new table named 'government_table12_polluted_result'.
",Verify the transformation on column 'company_name' in table 'government_table12_polluted' as per type 'transformation' and transformation 'garbage'. Check the results in the new table or view.
"Clean the 'company_name' column in the 'dataduo.government_table12_polluted' table by removing garbage data. Write the results to a new table named 'government_table12_polluted_result'.
",Verify the transformation on column 'company_name' in table 'government_table12_polluted' as per type 'transformation' and transformation 'garbage'. Check the results in the new table or view.
"Merge the 'country' column from the table 'dataduo.government_table13_polluted' into a new 'locality' column, using only data within 'dataduo.government_table13_polluted'. Write the results to a new table named 'government_table13_polluted_result'.
",Verify the transformation on column 'country' in table 'government_table13_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Split the 'full_name' column in the 'dataduo.government_table13_polluted' table into a new column called 'first_name'. Write the results to a new table named 'government_table13_polluted_result'.
",Verify the transformation on column 'full_name' in table 'government_table13_polluted' as per type 'split' and transformation 'split'. Check the results in the new table or view.
"Based on the mapping, the 'address' column in the 'government_table14_polluted' table requires no transformation. Create a view named 'government_table14_polluted_view_address' that selects the 'address' column as is from the table 'dataduo.government_table14_polluted'.
",Verify the transformation on column 'address' in table 'government_table14_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Split the column 'tax_id_number' from table dataduo.government_table14_polluted into a new column named 'tax_id_code'. Write the results to a new table named government_table14_polluted_result.
",Verify the transformation on column 'tax_id_number' in table 'government_table14_polluted' as per type 'split' and transformation 'split'. Check the results in the new table or view.
"Transform the 'employee_year' column in the 'dataduo.government_table15_polluted' table by merging its values to create a new 'employee_date' column. Store the result in a new view named 'government_table15_polluted_view'. Use only data available in 'dataduo.government_table15_polluted'.
",Verify the transformation on column 'employee_year' in table 'government_table15_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Create a new table or view named `government_table15_polluted_view` from `dataduo.government_table15_polluted`. Copy the column `mi` without any transformation.
",Verify the transformation on column 'mi' in table 'government_table15_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Split the 'office_consolidated' column in table dataduo.government_table17_polluted into multiple columns based on a delimiter (derive this from the data itself or use a common one like ';') and write the results to a new view named government_table17_polluted_view_office_consolidated_4.
",Verify the transformation on column 'office_consolidated' in table 'government_table17_polluted' as per type 'split' and transformation 'split'. Check the results in the new table or view.
"Correct the data type anomalies in the 'votes' column of the 'dataduo.government_table17_polluted' table, ensuring all values are of a consistent numeric data type. If the column is not a number cast it to a number. Round decimals to the nearest whole number. Write the results to a new table named 'government_table17_polluted_result'.
",Verify the transformation on column 'votes' in table 'government_table17_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Apply no transformation to the 'treatment_efficiency' column from the table 'dataduo.government_table2_polluted' and write the results to a new table named 'government_table2_polluted_result'.
",Verify the transformation on column 'treatment_efficiency' in table 'government_table2_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"For the table `dataduo.government_table2_polluted`, copy the column `cost_of_medicine` to a new column named `cost_of_medicine` in a new table named `government_table2_polluted_result`. No data transformation is required.
",Verify the transformation on column 'cost_of_medicine' in table 'government_table2_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Remove blank values from the 'phone' column of the 'dataduo.government_table3_polluted' table. Write the results to a new table named 'government_table3_polluted_result'.
",Verify the transformation on column 'phone' in table 'government_table3_polluted' as per type 'transformation' and transformation 'blanks'. Check the results in the new table or view.
"For the table `dataduo.government_table3_polluted`, copy the column `building_id` without any transformation to a new table named `government_table3_polluted_result_building_id`.
",Verify the transformation on column 'building_id' in table 'government_table3_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Create a new table named `government_table4_polluted_result` from `dataduo.government_table4_polluted`. Copy the 'gender' column to the new table without any transformation.
",Verify the transformation on column 'gender' in table 'government_table4_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Correct the data type anomalies in the 'zone' column of the table dataduo.government_table4_polluted.  Write the results to a new table named government_table4_polluted_result.
",Verify the transformation on column 'zone' in table 'government_table4_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Clean the 'school' column in the 'dataduo.government_table5_polluted' table by removing garbage data. Write the results to a new table named 'government_table5_polluted_result'.
",Verify the transformation on column 'school' in table 'government_table5_polluted' as per type 'transformation' and transformation 'garbage'. Check the results in the new table or view.
"Based on the provided table dataduo.government_table5_polluted, copy the 'rank' column without any transformation to a new table named government_table5_polluted_view.
",Verify the transformation on column 'rank' in table 'government_table5_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Normalize the 'established' column in the 'dataduo.government_table6_polluted' table. Write the transformed data to a new table named 'government_table6_polluted_result'.
",Verify the transformation on column 'established' in table 'government_table6_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Normalize the 'funding_or_ownership' column in the 'dataduo.government_table6_polluted' table. Write the results to a new table named 'government_table6_polluted_result'.
",Verify the transformation on column 'funding_or_ownership' in table 'government_table6_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Correct data type anomalies in the 'rank' column of the table dataduo.government_table7_polluted, ensuring it represents a consistent numeric data type. Write the results to a new table named government_table7_polluted_result.
",Verify the transformation on column 'rank' in table 'government_table7_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Normalize the 'state' column in the table dataduo.government_table7_polluted using only information available in that table. Write the results to a new table named government_table7_polluted_result.
",Verify the transformation on column 'state' in table 'government_table7_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Normalize the column 'government_expenditure_in_billions_usd' in the table 'dataduo.government_table8_polluted'. Write the results to a new table named 'government_table8_polluted_result'.
",Verify the transformation on column 'government_expenditure_in_billions_usd' in table 'government_table8_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Extract the median age from the 'demographic_data' column in the 'dataduo.government_table8_polluted' table and write the extracted median age to a new column named 'demographic_data_median_age'. Store the results in a new table named 'government_table8_polluted_result'.
",Verify the transformation on column 'demographic_data' in table 'government_table8_polluted' as per type 'transformation' and transformation 'extractions'. Check the results in the new table or view.
"Merge the column 'chc' from the table `dataduo.healthcare_table2_polluted` into a new view named `healthcare_table2_polluted_view` using only the data available in `dataduo.healthcare_table2_polluted`.
",Verify the transformation on column 'chc' in table 'healthcare_table2_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Remove garbage values from the column 'gynaecological_issues' in the table dataduo.healthcare_table2_polluted. Write the cleaned results to a new table named healthcare_table2_polluted_result.
",Verify the transformation on column 'gynaecological_issues' in table 'healthcare_table2_polluted' as per type 'transformation' and transformation 'garbage'. Check the results in the new table or view.
"Split the 'patient_name' column in the 'dataduo.healthcare_table3_polluted' table into a new column called 'patient_last_name', using space as a delimiter. Write the results to a new table named 'healthcare_table3_polluted_result'.
",Verify the transformation on column 'patient_name' in table 'healthcare_table3_polluted' as per type 'split' and transformation 'split'. Check the results in the new table or view.
"Normalize the 'gender' column in the 'dataduo.healthcare_table3_polluted' table. Write the transformed results to a new view named 'healthcare_table3_polluted_view_gender'.
",Verify the transformation on column 'gender' in table 'healthcare_table3_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Clean the 'hospital_name' column in the 'dataduo.healthcare_table4_polluted' table by replacing all blank values with NULL. Write the results to a new table named 'healthcare_table4_polluted_result'.
",Verify the transformation on column 'hospital_name' in table 'healthcare_table4_polluted' as per type 'transformation' and transformation 'blanks'. Check the results in the new table or view.
"Extract the domain from the 'email' column in the table dataduo.healthcare_table4_polluted using a split operation. Write the extracted domains into a new column named 'domain' in a new table named healthcare_table4_polluted_result.
",Verify the transformation on column 'email' in table 'healthcare_table4_polluted' as per type 'split' and transformation 'None'. Check the results in the new table or view.
"Normalize the phone_number column in dataduo.healthcare_table6_polluted. Write the transformed data to a new table named healthcare_table6_polluted_result.
",Verify the transformation on column 'phone_number' in table 'healthcare_table6_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Remove garbage data from the 'hospital_name' column in the 'dataduo.healthcare_table6_polluted' table. Write the cleaned results to a new table named 'healthcare_table6_polluted_result'.
",Verify the transformation on column 'hospital_name' in table 'healthcare_table6_polluted' as per type 'transformation' and transformation 'garbage'. Check the results in the new table or view.
"For the table dataduo.healthcare_table8_polluted, copy the column 'type' to a new column named 'type' in a new table named healthcare_table8_polluted_result. No transformation is required.
",Verify the transformation on column 'type' in table 'healthcare_table8_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Based on the polluted table dataduo.healthcare_table8_polluted, copy the column 'type' to a new column named 'type' in a new table named healthcare_table8_polluted_result. No transformation is required.
",Verify the transformation on column 'type' in table 'healthcare_table8_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Extract relevant information from the 'notes' column of the 'dataduo.healthcare_table9_polluted' table. Write the results to a new table named 'healthcare_table9_polluted_result'.
",Verify the transformation on column 'notes' in table 'healthcare_table9_polluted' as per type 'transformation' and transformation 'extractions'. Check the results in the new table or view.
"Normalize the 'birthdate' column in table dataduo.healthcare_table9_polluted to a consistent date format. Write the transformed results to a new table named healthcare_table9_polluted_result.
",Verify the transformation on column 'birthdate' in table 'healthcare_table9_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Split the 'compatibility' column in table dataduo.hightech_table10_polluted. Write the result to a new table named hightech_table10_polluted_result.
",Verify the transformation on column 'compatibility' in table 'hightech_table10_polluted' as per type 'split' and transformation 'None'. Check the results in the new table or view.
"Split the 'features' column in table dataduo.hightech_table10_polluted. Write the results to a new table named hightech_table10_polluted_result.
",Verify the transformation on column 'features' in table 'hightech_table10_polluted' as per type 'split' and transformation 'None'. Check the results in the new table or view.
"Merge values in the 'type1' column from the 'dataduo.hightech_table11_polluted' table to create a new 'types' column. Write the results in a new table named 'hightech_table11_polluted_result'.
",Verify the transformation on column 'type1' in table 'hightech_table11_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Split the 'year_place_of_significance' column in the table dataduo.hightech_table11_polluted into a new column named 'detail'. Write the result to a new table named hightech_table11_polluted_result.
",Verify the transformation on column 'year_place_of_significance' in table 'hightech_table11_polluted' as per type 'split' and transformation 'split'. Check the results in the new table or view.
"Normalize the 'region_of_headquarters' column in the 'dataduo.hightech_table12_polluted' table. Write the transformed results to a new table named 'hightech_table12_polluted_result'.
",Verify the transformation on column 'region_of_headquarters' in table 'hightech_table12_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Normalize the 'phone' column in the 'dataduo.hightech_table12_polluted' table. Write the transformed data to a new table named 'hightech_table12_polluted_result'.
",Verify the transformation on column 'phone' in table 'hightech_table12_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Copy the 'company' column from table dataduo.hightech_table13_polluted to a new table named hightech_table13_polluted_result, without any transformations.
",Verify the transformation on column 'company' in table 'hightech_table13_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Convert the values in the 'revenue_usd_billions' column of the 'dataduo.hightech_table13_polluted' table to Indian Rupees (INR) billions using a reasonable conversion rate. Create a new column named 'revenue_inr_billions' and write the results to a new table named 'hightech_table13_polluted_result'.
",Verify the transformation on column 'revenue_usd_billions' in table 'hightech_table13_polluted' as per type 'transformation' and transformation 'unit_conversions'. Check the results in the new table or view.
"Normalize the 'color' column in the 'dataduo.hightech_table14_polluted' table. Write the transformed results to a new table named 'hightech_table14_polluted_result'.
",Verify the transformation on column 'color' in table 'hightech_table14_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Based on the provided mapping, the battery_capacity column in dataduo.hightech_table14_polluted requires no transformation. Create a new table named hightech_table14_polluted_result using all columns from dataduo.hightech_table14_polluted with no changes.
",Verify the transformation on column 'battery_capacity' in table 'hightech_table14_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Copy the column IP_addresses_numeric from the table dataduo.hightech_table1_polluted to a new table named hightech_table1_polluted_result.
",Verify the transformation on column 'IP_addresses_numeric' in table 'hightech_table1_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Normalize the column numeric_percentage in table dataduo.hightech_table1_polluted to represent the values as percentages, and write the results into a new table named hightech_table1_polluted_result.
",Verify the transformation on column 'numeric_percentage' in table 'hightech_table1_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Normalize the 'region' column in the table dataduo.hightech_table2_polluted using only the data within that table. Write the results to a new table named hightech_table2_polluted_result.
",Verify the transformation on column 'region' in table 'hightech_table2_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Convert the 'internet_users' column in the dataduo.hightech_table2_polluted table from its current unit to millions, storing the result in a new column named 'Internet_users_in_million'. Write the results to a new table named hightech_table2_polluted_result.
",Verify the transformation on column 'internet_users' in table 'hightech_table2_polluted' as per type 'transformation' and transformation 'unit_conversions'. Check the results in the new table or view.
"Normalize the 'form_factor' column in the 'dataduo.hightech_table3_polluted' table. Create a new view named 'hightech_table3_polluted_view' containing the normalized 'form_factor' column. Use only the data within the 'dataduo.hightech_table3_polluted' table for this transformation.
",Verify the transformation on column 'form_factor' in table 'hightech_table3_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Normalize the 'manufacturer' column in the 'dataduo.hightech_table3_polluted' table.  Write the results to a new table named 'hightech_table3_polluted_result_manufacturer'.
",Verify the transformation on column 'manufacturer' in table 'hightech_table3_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Convert the 'price_usd' column in the 'dataduo.hightech_table6_polluted' table from USD to EUR using a conversion rate derived from values within the 'price_usd' column. Store the results in a new table named 'hightech_table6_polluted_result'. Name the new column 'price_eur'.
",Verify the transformation on column 'price_usd' in table 'hightech_table6_polluted' as per type 'transformation' and transformation 'unit_conversions'. Check the results in the new table or view.
"Clean the 'brand' column in the 'dataduo.hightech_table6_polluted' table by removing garbage values. Write the cleaned results to a new table named 'hightech_table6_polluted_result'.
",Verify the transformation on column 'brand' in table 'hightech_table6_polluted' as per type 'transformation' and transformation 'garbage'. Check the results in the new table or view.
"Remove blank emails from the 'email' column of the 'dataduo.hightech_table7_polluted' table. Write the cleaned data into a new table named 'hightech_table7_polluted_result'.
",Verify the transformation on column 'email' in table 'hightech_table7_polluted' as per type 'transformation' and transformation 'blanks'. Check the results in the new table or view.
"Normalize the 'manufacturer' column in table dataduo.hightech_table7_polluted using only the data within that table. Write the transformed data to a new table named 'hightech_table7_polluted_result'.
",Verify the transformation on column 'manufacturer' in table 'hightech_table7_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Transform the 'cost_usd' column in the 'dataduo.hightech_table8_polluted' table to 'cost_inr' using unit conversions. Create a new table named 'hightech_table8_polluted_result' with the converted values.
",Verify the transformation on column 'cost_usd' in table 'hightech_table8_polluted' as per type 'transformation' and transformation 'unit_conversions'. Check the results in the new table or view.
"Merge the 'customer_last_name' column from 'dataduo.hightech_table8_polluted' to create a new column named 'customer_full_name' in a new view named 'hightech_table8_polluted_view'. No other transformations are required. Use only data available in 'dataduo.hightech_table8_polluted'.
",Verify the transformation on column 'customer_last_name' in table 'hightech_table8_polluted' as per type 'merge' and transformation 'None'. Check the results in the new table or view.
"Clean the column `culmen_depth_mm` in the table `dataduo.ml_datasets_penguins_polluted` by removing garbage values. Write the cleaned data to a new table named `ml_datasets_penguins_polluted_result`.
",Verify the transformation on column 'culmen_depth_mm' in table 'ml_datasets_penguins_polluted' as per type 'transformation' and transformation 'garbage'. Check the results in the new table or view.
"Remove garbage values from the column 'culmen_depth_mm' in the table 'dataduo.ml_datasets_penguins_polluted'. Write the results to a new table named 'ml_datasets_penguins_polluted_result'.
",Verify the transformation on column 'culmen_depth_mm' in table 'ml_datasets_penguins_polluted' as per type 'transformation' and transformation 'garbage'. Check the results in the new table or view.
"Create a new column named `acq_date` in a new table named `nasa_wildfire_past_week_polluted_result` by directly copying the values from the `acquisition_date` column in the table `dataduo.nasa_wildfire_past_week_polluted`. No transformation is needed.
",Verify the transformation on column 'acquisition_date' in table 'nasa_wildfire_past_week_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Normalize the column 'day_or_night' in the table dataduo.nasa_wildfire_past_week_polluted and store the results in a new column named 'daynight'. Write the results to a new table named nasa_wildfire_past_week_polluted_result.
",Verify the transformation on column 'day_or_night' in table 'nasa_wildfire_past_week_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Remove extra characters from the 'employee_id' column in the 'dataduo.org_employee_table10_polluted' table. Write the cleaned results to a new table named 'dataduo.org_employee_table10_polluted_result'.
",Verify the transformation on column 'employee_id' in table 'org_employee_table10_polluted' as per type 'transformation' and transformation 'extra_characters'. Check the results in the new table or view.
"Remove blank values from the 'email' column of the table dataduo.org_employee_table10_polluted. Write the results to a new table named org_employee_table10_polluted_result.
",Verify the transformation on column 'email' in table 'org_employee_table10_polluted' as per type 'transformation' and transformation 'blanks'. Check the results in the new table or view.
"Normalize the 'email' column in the 'dataduo.org_employee_table11_polluted' table. Write the transformed data to a new table named 'org_employee_table11_polluted_result'.
",Verify the transformation on column 'email' in table 'org_employee_table11_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Clean the 'position' column in the 'dataduo.org_employee_table11_polluted' table by removing garbage data. Write the results to a new table named 'org_employee_table11_polluted_result'.
",Verify the transformation on column 'position' in table 'org_employee_table11_polluted' as per type 'transformation' and transformation 'garbage'. Check the results in the new table or view.
"Merge the values in the 'hobbies_interests_1' column into a new column named 'hobbies_interests' within the table 'dataduo.org_employee_table13_polluted'. Write the results to a new table named 'dataduo.org_employee_table13_polluted_result'.
",Verify the transformation on column 'hobbies_interests_1' in table 'org_employee_table13_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Normalize the 'phone_number' column in the table 'dataduo.org_employee_table13_polluted'. Write the results into a new table named 'dataduo.org_employee_table13_polluted_result'.
",Verify the transformation on column 'phone_number' in table 'org_employee_table13_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Convert the 'employee_height_cms' column in the 'dataduo.org_employee_table14_polluted' table from centimeters to meters and write the results to a new table named 'org_employee_table14_polluted_result'. Name the new column 'employee_height_meters'.
",Verify the transformation on column 'employee_height_cms' in table 'org_employee_table14_polluted' as per type 'transformation' and transformation 'unit_conversions'. Check the results in the new table or view.
"Convert the 'employee_height_cms' column in table dataduo.org_employee_table14_polluted from centimeters to meters and store the results in a new column named 'employee_height_meters'. Write the results to a new table named 'org_employee_table14_polluted_result'.
",Verify the transformation on column 'employee_height_cms' in table 'org_employee_table14_polluted' as per type 'transformation' and transformation 'unit_conversions'. Check the results in the new table or view.
"Convert the 'weight_lbs' column in table dataduo.org_employee_table15_polluted from pounds to grams. Create a new column named 'weight_grams' in a new view named org_employee_table15_polluted_view.
",Verify the transformation on column 'weight_lbs' in table 'org_employee_table15_polluted' as per type 'transformation' and transformation 'unit_conversions'. Check the results in the new table or view.
"Standardize the 'id' column in the 'dataduo.org_employee_table15_polluted' table to resolve data type anomalies. Write the transformed data to a new table named 'org_employee_table15_polluted_result'.
",Verify the transformation on column 'id' in table 'org_employee_table15_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Transform the 'revenue_usd' column in the 'dataduo.org_employee_table16_polluted' table to 'revenue_inr' using unit conversions. Write the results to a new table named 'org_employee_table16_polluted_result'.
",Verify the transformation on column 'revenue_usd' in table 'org_employee_table16_polluted' as per type 'transformation' and transformation 'unit_conversions'. Check the results in the new table or view.
"Detect and correct data type anomalies in the 'rank' column of the 'dataduo.org_employee_table16_polluted' table. Ensure the 'rank' column has a consistent and expected data type, using only information available within the polluted table. Write the transformed data to a new table named 'org_employee_table16_polluted_result'.
",Verify the transformation on column 'rank' in table 'org_employee_table16_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Merge the 'state' column into a new 'city_state' column in the table dataduo.org_employee_table17_polluted. Write the results to a new table named dataduo.org_employee_table17_polluted_result.
",Verify the transformation on column 'state' in table 'org_employee_table17_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Given the table `dataduo.org_employee_table17_polluted`, and the column `business`, perform no transformations. Create a new table named `org_employee_table17_polluted_result` with the results.
",Verify the transformation on column 'business' in table 'org_employee_table17_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Normalize the 'rank' column in the 'dataduo.org_employee_table19_polluted' table. Write the transformed data to a new table named 'org_employee_table19_polluted_result'.
",Verify the transformation on column 'rank' in table 'org_employee_table19_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Normalize the 'user_reg_date' column in the 'dataduo.org_employee_table19_polluted' table. Write the results, including all other columns, to a new table named 'org_employee_table19_polluted_result'.
",Verify the transformation on column 'user_reg_date' in table 'org_employee_table19_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Extract the 'jobcat' column from the 'dataduo.org_employee_table1_polluted' table and write the results to a new table named 'dataduo.org_employee_table1_polluted_result' with a new column named 'jobcat_manager'.
",Verify the transformation on column 'jobcat' in table 'org_employee_table1_polluted' as per type 'transformation' and transformation 'extractions'. Check the results in the new table or view.
"Copy the 'id' column from the table 'dataduo.org_employee_table1_polluted' to a new table named 'org_employee_table1_polluted_result_id'. No transformation is needed.
",Verify the transformation on column 'id' in table 'org_employee_table1_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Merge the values from the 'first_name' column into a new column named 'name' in the table 'dataduo.org_employee_table20_polluted'. Write the results to a new table named 'dataduo.org_employee_table20_polluted_result'.
",Verify the transformation on column 'first_name' in table 'org_employee_table20_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Merge the values from the 'first_name' column into a new 'name' column in the table dataduo.org_employee_table20_polluted. Write the results to a new table named org_employee_table20_polluted_result.
",Verify the transformation on column 'first_name' in table 'org_employee_table20_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Based on the table `dataduo.org_employee_table21_polluted`, copy the column `society_type` to a new table named `org_employee_table21_polluted_view` without any transformation.
",Verify the transformation on column 'society_type' in table 'org_employee_table21_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Extract the state from the 'place' column in the 'dataduo.org_employee_table21_polluted' table. Write the extracted state values to a new column named 'state' in a new table named 'org_employee_table21_polluted_result'.
",Verify the transformation on column 'place' in table 'org_employee_table21_polluted' as per type 'transformation' and transformation 'extractions'. Check the results in the new table or view.
"Normalize the 'full_name' column in the 'dataduo.org_employee_table22_polluted' table. Write the results to a new table named 'dataduo.org_employee_table22_polluted_result'.
",Verify the transformation on column 'full_name' in table 'org_employee_table22_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Based on the polluted table dataduo.org_employee_table22_polluted, merge the data from the column Age_4 into a new column named 'age'.  Create a new view named org_employee_table22_polluted_view with this transformation.
",Verify the transformation on column 'Age_4' in table 'org_employee_table22_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Transform the column 'father_first_name' from table 'dataduo.org_employee_table23_polluted' using a merge operation to create a new column named 'father_name'. Write the results to a new table named 'org_employee_table23_polluted_result'.
",Verify the transformation on column 'father_first_name' in table 'org_employee_table23_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Extract the last name from the 'full_name' column in table dataduo.org_employee_table23_polluted. Write the extracted last names to a new column named 'last_name' in a new table named dataduo.org_employee_table23_polluted_result.
",Verify the transformation on column 'full_name' in table 'org_employee_table23_polluted' as per type 'transformation' and transformation 'extractions'. Check the results in the new table or view.
"Identify and correct data type anomalies in the 'rank' column of the table 'dataduo.org_employee_table28_polluted'. Write the transformed data into a new table named 'dataduo.org_employee_table28_polluted_result'.
",Verify the transformation on column 'rank' in table 'org_employee_table28_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Standardize the 'rank' column in the 'dataduo.org_employee_table28_polluted' table to resolve data type anomalies. Write the cleaned results to a new table named 'dataduo.org_employee_table28_polluted_result'.
",Verify the transformation on column 'rank' in table 'org_employee_table28_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Convert the 'employee_height_cms' column in the 'dataduo.org_employee_table2_polluted' table from centimeters to meters and store the results in a new column named 'employee_height_meters'. Write the transformed data into a new table named 'org_employee_table2_polluted_result'.
",Verify the transformation on column 'employee_height_cms' in table 'org_employee_table2_polluted' as per type 'transformation' and transformation 'unit_conversions'. Check the results in the new table or view.
"Convert the 'prev_salary_usd' column in table dataduo.org_employee_table2_polluted from USD to INR, storing the results in a new column named 'prev_salary_inr'.  Write the transformed data to a new table named dataduo.org_employee_table2_polluted_result.
",Verify the transformation on column 'prev_salary_usd' in table 'org_employee_table2_polluted' as per type 'transformation' and transformation 'unit_conversions'. Check the results in the new table or view.
"Apply no transformations to the 'designation' column from the 'dataduo.org_employee_table3_polluted' table. Write the results to a new table named 'dataduo.org_employee_table3_polluted_result'.
",Verify the transformation on column 'designation' in table 'org_employee_table3_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Convert the 'remuneration_in_dollars' column in the 'dataduo.org_employee_table3_polluted' table to 'remuneration_in_rupees' using unit conversion. Write the results to a new table named 'dataduo.org_employee_table3_polluted_result'.
",Verify the transformation on column 'remuneration_in_dollars' in table 'org_employee_table3_polluted' as per type 'transformation' and transformation 'unit_conversions'. Check the results in the new table or view.
"Remove extra characters from the 'job_details' column in the 'dataduo.org_employee_table4_polluted' table. Write the cleaned results to a new table named 'org_employee_table4_polluted_result'.
",Verify the transformation on column 'job_details' in table 'org_employee_table4_polluted' as per type 'transformation' and transformation 'extra_characters'. Check the results in the new table or view.
"Normalize the 'employee_phone_numbers' column in the 'dataduo.org_employee_table4_polluted' table. Write the results to a new table named 'dataduo.org_employee_table4_polluted_result'.
",Verify the transformation on column 'employee_phone_numbers' in table 'org_employee_table4_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Based on the provided information, create a view named `org_employee_table6_polluted_view` from the `dataduo.org_employee_table6_polluted` table. Select all columns, including the `suffix` column, without performing any transformations.
",Verify the transformation on column 'suffix' in table 'org_employee_table6_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Normalize the 'gender_abbrev' column in table dataduo.org_employee_table6_polluted using only the data present in the table itself. Write the results to a new table named dataduo.org_employee_table6_polluted_result.
",Verify the transformation on column 'gender_abbrev' in table 'org_employee_table6_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Clean the column '2022_ceo_cap' in the table 'dataduo.org_employee_table7_polluted' by replacing all blank values with NULL. Write the results to a new table named 'org_employee_table7_polluted_result'.
",Verify the transformation on column '2022_ceo_cap' in table 'org_employee_table7_polluted' as per type 'transformation' and transformation 'blanks'. Check the results in the new table or view.
"Fill all blank values in the column 2022_ceo_cap of the table dataduo.org_employee_table7_polluted using only the available data in that table. Write the results in a new table named dataduo.org_employee_table7_polluted_result.
",Verify the transformation on column '2022_ceo_cap' in table 'org_employee_table7_polluted' as per type 'transformation' and transformation 'blanks'. Check the results in the new table or view.
"Standardize the column 'experience' on table dataduo.org_employee_table8_polluted to correct data type anomalies, ensuring it is a numeric type. Round decimals to the nearest whole number if applicable. Write the results to a new table named dataduo.org_employee_table8_polluted_result.
",Verify the transformation on column 'experience' in table 'org_employee_table8_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Remove garbage data from the 'age' column in the 'dataduo.org_employee_table8_polluted' table. Write the cleaned results to a new table named 'dataduo.org_employee_table8_polluted_result'.
",Verify the transformation on column 'age' in table 'org_employee_table8_polluted' as per type 'transformation' and transformation 'garbage'. Check the results in the new table or view.
"Remove all blank spaces from the 'company_name' column of the table 'dataduo.org_employee_table9_polluted'. Write the results to a new table named 'dataduo.org_employee_table9_polluted_result'.
",Verify the transformation on column 'company_name' in table 'org_employee_table9_polluted' as per type 'transformation' and transformation 'blanks'. Check the results in the new table or view.
"Based on the polluted table dataduo.org_employee_table9_polluted, create a new table or view named 'org_employee_table9_polluted_result'. The 'email' column should be copied to the new table without any transformations.
",Verify the transformation on column 'email' in table 'org_employee_table9_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Extract the numeric value representing battery capacity in mAh from the 'battery' column of the 'dataduo.retail_table2_polluted' table and store it in a new column named 'battery_in_mah'. Write the results to a new view named 'retail_table2_polluted_view'.
",Verify the transformation on column 'battery' in table 'retail_table2_polluted' as per type 'transformation' and transformation 'extractions'. Check the results in the new table or view.
"Split the 'mobile' column in table 'dataduo.retail_table2_polluted' into a new column named 'brand'. Write the results to a new table named 'retail_table2_polluted_view'.
",Verify the transformation on column 'mobile' in table 'retail_table2_polluted' as per type 'split' and transformation 'None'. Check the results in the new table or view.
"Split the 'location' column in table dataduo.retail_table3_polluted. Write the resulting split values to a new table named retail_table3_polluted_view, creating a new column named 'code' from the split value.
",Verify the transformation on column 'location' in table 'retail_table3_polluted' as per type 'split' and transformation 'None'. Check the results in the new table or view.
"Extract brand names from the 'car_name' column in the 'dataduo.retail_table3_polluted' table and write the results into a new column named 'brand_name' in a new view called 'retail_table3_polluted_view'.
",Verify the transformation on column 'car_name' in table 'retail_table3_polluted' as per type 'transformation' and transformation 'extractions'. Check the results in the new table or view.
"Standardize the data type of the 'mat' column in table dataduo.sports_table2_polluted to a consistent numerical format, handling any data type anomalies. Write the results to a new table named sports_table2_polluted_result.
",Verify the transformation on column 'mat' in table 'sports_table2_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Extract the opposition name from the 'opposition' column in the table dataduo.sports_table2_polluted. Create a new view named sports_table2_polluted_view, containing the cleaned 'opposition' column.
",Verify the transformation on column 'opposition' in table 'sports_table2_polluted' as per type 'transformation' and transformation 'extractions'. Check the results in the new table or view.
"Standardize the data type of the 'player' column in the table `dataduo.sports_table3_polluted` to resolve any data type anomalies. Write the results to a new table named `sports_table3_polluted_result01`.
",Verify the transformation on column 'player' in table 'sports_table3_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Correct the data type anomalies in the 'sr' column of the 'dataduo.sports_table3_polluted' table, ensuring it has a consistent data type. Write the results to a new table named 'sports_table3_polluted_result'.
",Verify the transformation on column 'sr' in table 'sports_table3_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Transform the 'sr' column in table dataduo.sports_table5_polluted to resolve data type anomalies. Write the results to a new table named sports_table5_polluted_result, using only the data from dataduo.sports_table5_polluted.
",Verify the transformation on column 'sr' in table 'sports_table5_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Standardize the 'ave_m' column in the 'dataduo.sports_table5_polluted' table to resolve data type anomalies, ensuring it has a consistent numerical data type. Write the transformed results to a new table named 'sports_table5_polluted_result'.
",Verify the transformation on column 'ave_m' in table 'sports_table5_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Remove garbage values from the 'duration_time' column in the 'dataduo.sports_table6_polluted' table.  Write the cleaned data to a new table named 'sports_table6_polluted_result'.
",Verify the transformation on column 'duration_time' in table 'sports_table6_polluted' as per type 'transformation' and transformation 'garbage'. Check the results in the new table or view.
"Correct the data type anomalies in the 'opposition' column of the 'dataduo.sports_table6_polluted' table. Write the results to a new table named 'sports_table6_polluted_result_opposition'.
",Verify the transformation on column 'opposition' in table 'sports_table6_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Merge the 'first_name' column from table dataduo.sports_table9_polluted into a new column named 'full_name' in a new table named sports_table9_polluted_result.
",Verify the transformation on column 'first_name' in table 'sports_table9_polluted' as per type 'merge' and transformation 'None'. Check the results in the new table or view.
"Split the 'start_end_year' column in the 'dataduo.sports_table9_polluted' table into a new column named 'start_year' using the first part of the split (assuming the split is delimited by a hyphen or similar delimiter commonly used for date ranges). Write the results to a new table named 'sports_table9_polluted_result'.
",Verify the transformation on column 'start_end_year' in table 'sports_table9_polluted' as per type 'split' and transformation 'None'. Check the results in the new table or view.
"Correct the data type anomalies in the `unix_ts` column of the `dataduo.synthetic_data_polluted` table. Write the transformed data to a new table named `synthetic_data_polluted_result`.
",Verify the transformation on column 'unix_ts' in table 'synthetic_data_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Normalize the 't_shirt_size' column in the table dataduo.synthetic_data_polluted. Write the transformed data to a new table named synthetic_data_polluted_result.
",Verify the transformation on column 't_shirt_size' in table 'synthetic_data_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Normalize the 'region' column in the table dataduo.tourism_table10_polluted. Write the results to a new table named tourism_table10_polluted_result.
",Verify the transformation on column 'region' in table 'tourism_table10_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Standardize the column 'frequency' on table dataduo.tourism_table10_polluted to address data type anomalies. Write the results in a new table named dataduo.tourism_table10_polluted_result.
",Verify the transformation on column 'frequency' in table 'tourism_table10_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Merge the column 'city_experience_score' from the table `dataduo.tourism_table11_polluted` into a new column named `driving_city_air_travel_experience_score`. Write the results to a new table named `tourism_table11_polluted_result`.
",Verify the transformation on column 'city_experience_score' in table 'tourism_table11_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Merge the column 'air_travel_experience_score' from the table 'dataduo.tourism_table11_polluted' into a new column named 'driving_city_air_travel_experience_score' in a new table named 'tourism_table11_polluted_result'. Use only data available in 'dataduo.tourism_table11_polluted'.
",Verify the transformation on column 'air_travel_experience_score' in table 'tourism_table11_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Split the 'hotels' column from the 'dataduo.tourism_table12_polluted' table. Write the results, including the new column 'hotel_2', to a new table named 'tourism_table12_polluted_result'.
",Verify the transformation on column 'hotels' in table 'tourism_table12_polluted' as per type 'split' and transformation 'split'. Check the results in the new table or view.
"Extract the location from the 'tourist_place' column of the 'dataduo.tourism_table12_polluted' table and write the results into a new table named 'tourism_table12_polluted_result'.
",Verify the transformation on column 'tourist_place' in table 'tourism_table12_polluted' as per type 'transformation' and transformation 'extractions'. Check the results in the new table or view.
"Merge the values in the 'class_4' column of the 'dataduo.tourism_table13_polluted' table to create a new 'class' column. Write the results to a new table named 'tourism_table13_polluted_result'.
",Verify the transformation on column 'class_4' in table 'tourism_table13_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Apply no transformation to the 'seat_comfort' column from the 'dataduo.tourism_table13_polluted' table. Write the results, including all columns, to a new table named 'tourism_table13_polluted_result'.
",Verify the transformation on column 'seat_comfort' in table 'tourism_table13_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Merge the data from the 'visit_purpose_3' column in the 'dataduo.tourism_table14_polluted' table into a new column named 'visit_purpose'. Write the results to a new table named 'tourism_table14_polluted_result'.
",Verify the transformation on column 'visit_purpose_3' in table 'tourism_table14_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Merge the 'first_name' column from table 'dataduo.tourism_table14_polluted' into a new column called 'name'. Write the results to a new table named 'tourism_table14_polluted_result'.
",Verify the transformation on column 'first_name' in table 'tourism_table14_polluted' as per type 'merge' and transformation 'merge'. Check the results in the new table or view.
"Standardize the column `visited_days` on table `dataduo.tourism_table16_polluted` to address data type anomalies. Write the results in a new table named `tourism_table16_polluted_result`.
",Verify the transformation on column 'visited_days' in table 'tourism_table16_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Convert the 'entryfee_usd' column in the 'dataduo.tourism_table16_polluted' table to 'entryfee_gs' using a unit conversion, based on the data available within the 'dataduo.tourism_table16_polluted' table itself. Store the results in a new table named 'tourism_table16_polluted_result'.
",Verify the transformation on column 'entryfee_usd' in table 'tourism_table16_polluted' as per type 'transformation' and transformation 'unit_conversions'. Check the results in the new table or view.
"Given the 'arrives' column in the 'dataduo.tourism_table2_polluted' table, perform no transformation and write the results to a new table named 'tourism_table2_polluted_result_arrives'.
",Verify the transformation on column 'arrives' in table 'tourism_table2_polluted' as per type 'None' and transformation 'None'. Check the results in the new table or view.
"Normalize the column 'wednesday' in the table dataduo.tourism_table2_polluted. Write the results to a new table named tourism_table2_polluted_result.
",Verify the transformation on column 'wednesday' in table 'tourism_table2_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Split the 'attractions' column in table dataduo.tourism_table3_polluted into a new column named 'attractions_max' and write the result to a new table named tourism_table3_polluted_result.
",Verify the transformation on column 'attractions' in table 'tourism_table3_polluted' as per type 'split' and transformation 'None'. Check the results in the new table or view.
"Normalize the 'country_name' column in the 'dataduo.tourism_table3_polluted' table. Write the results to a new table named 'tourism_table3_polluted_result_country_name'.
",Verify the transformation on column 'country_name' in table 'tourism_table3_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Remove extra characters from the 'popular_locations' column in the 'dataduo.tourism_table4_polluted' table. Write the results to a new table named 'tourism_table4_polluted_result'.
",Verify the transformation on column 'popular_locations' in table 'tourism_table4_polluted' as per type 'transformation' and transformation 'extra_characters'. Check the results in the new table or view.
"Remove garbage values from the 'recommended_hotels' column in the 'dataduo.tourism_table4_polluted' table. Write the results to a new table named 'tourism_table4_polluted_result_recommended_hotels'.
",Verify the transformation on column 'recommended_hotels' in table 'tourism_table4_polluted' as per type 'transformation' and transformation 'garbage'. Check the results in the new table or view.
"Split the 'full_name' column in the 'dataduo.tourism_table5_polluted' table into a new column named 'last_name' based on whitespace. Write the results to a new table named 'tourism_table5_polluted_result'.
",Verify the transformation on column 'full_name' in table 'tourism_table5_polluted' as per type 'split' and transformation 'split'. Check the results in the new table or view.
"Replace all blank values in the 'airport_name' column of the 'dataduo.tourism_table5_polluted' table with NULL values. Write the results to a new table named 'tourism_table5_polluted_result_airport_name_blanks'.
",Verify the transformation on column 'airport_name' in table 'tourism_table5_polluted' as per type 'transformation' and transformation 'blanks'. Check the results in the new table or view.
"Split the 'additional_historical_sites' column from the 'dataduo.tourism_table6_polluted' table into multiple columns. Name the new column 'additional_historical_sites_place3' and create a new view called 'tourism_table6_polluted_view' with this split column.
",Verify the transformation on column 'additional_historical_sites' in table 'tourism_table6_polluted' as per type 'split' and transformation 'None'. Check the results in the new table or view.
"Split the 'additional_historical_sites' column in the table dataduo.tourism_table6_polluted into a new column named 'additional_historical_sites_place1'. Write the results to a new table named tourism_table6_polluted_result_additional_historical_sites.
",Verify the transformation on column 'additional_historical_sites' in table 'tourism_table6_polluted' as per type 'split' and transformation 'None'. Check the results in the new table or view.
"Extract the country name from the 'tourism_destination' column in the 'dataduo.tourism_table7_polluted' table and write the results to a new table named 'tourism_table7_polluted_result', with the extracted values stored in a new column called 'tourist_destination_country'.
",Verify the transformation on column 'tourism_destination' in table 'tourism_table7_polluted' as per type 'transformation' and transformation 'extractions'. Check the results in the new table or view.
"Standardize the 'bus_number' column in the 'dataduo.tourism_table7_polluted' table to resolve data type anomalies, ensuring consistency. Write the transformed data to a new table named 'tourism_table7_polluted_result'.
",Verify the transformation on column 'bus_number' in table 'tourism_table7_polluted' as per type 'transformation' and transformation 'data_type_anomalies'. Check the results in the new table or view.
"Replace blank values in the '5yr_rank_change' column of the 'dataduo.tourism_table8_polluted' table. Write the results to a new table named 'tourism_table8_polluted_result'.
",Verify the transformation on column '5yr_rank_change' in table 'tourism_table8_polluted' as per type 'transformation' and transformation 'blanks'. Check the results in the new table or view.
"Normalize the 'growth_17_19' column in the 'dataduo.tourism_table8_polluted' table. Write the results to a new table named 'tourism_table8_polluted_view'.
",Verify the transformation on column 'growth_17_19' in table 'tourism_table8_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Remove blank values from the 'email' column of the 'dataduo.tourism_table9_polluted' table. Write the results to a new table named 'tourism_table9_polluted_result'.
",Verify the transformation on column 'email' in table 'tourism_table9_polluted' as per type 'transformation' and transformation 'blanks'. Check the results in the new table or view.
"Clean the 'airport' column in the 'dataduo.tourism_table9_polluted' table by removing garbage values. Write the cleaned results to a new table named 'tourism_table9_polluted_result'.
",Verify the transformation on column 'airport' in table 'tourism_table9_polluted' as per type 'transformation' and transformation 'garbage'. Check the results in the new table or view.
"Normalize the column `country_id` in the table `dataduo.world_bank_health_nutrition_population_polluted` to create a clean `country_code` column, using only data available in the polluted table. Write the transformed data to a new table named `world_bank_health_nutrition_population_polluted_result`.
",Verify the transformation on column 'country_id' in table 'world_bank_health_nutrition_population_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
"Normalize the 'country' column in the 'dataduo.world_bank_health_nutrition_population_polluted' table to create a clean 'country_name' column. Write the results to a new table named 'world_bank_health_nutrition_population_polluted_result'.
",Verify the transformation on column 'country' in table 'world_bank_health_nutrition_population_polluted' as per type 'transformation' and transformation 'normalization'. Check the results in the new table or view.
